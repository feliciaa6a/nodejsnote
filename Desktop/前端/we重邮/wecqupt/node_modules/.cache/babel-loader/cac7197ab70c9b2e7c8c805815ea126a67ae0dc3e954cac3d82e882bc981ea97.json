{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZTY\\\\Desktop\\\\\\u524D\\u7AEF\\\\we\\u91CD\\u90AE\\\\wecqupt\\\\src\\\\pages\\\\login\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport \"./login.css\";\nimport Input from \"./components/input/input\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst login = () => {\n  _s();\n  //执行useNavigate得到跳转函数\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = (username, password) => {\n    // Here you should implement your login logic\n    // If login is successful, set isLoggedIn to true\n    // setIsLoggedIn(true);\n    if (isLoggedIn) {\n      navigate(\"/home\");\n    } else {\n      alert(\"Please login first!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-bg\",\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(login, \"GVHzGJnl+vLMWdf9aHFkM2Kljwg=\", false, function () {\n  return [useNavigate];\n});\nexport default login;","map":{"version":3,"names":["Input","useNavigate","useState","jsxDEV","_jsxDEV","login","_s","navigate","isLoggedIn","setIsLoggedIn","handleLogin","username","password","alert","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/ZTY/Desktop/前端/we重邮/wecqupt/src/pages/login/login.jsx"],"sourcesContent":["import \"./login.css\";\r\nimport Input from \"./components/input/input\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst login = () => {\r\n    //执行useNavigate得到跳转函数\r\n    const navigate = useNavigate();\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const handleLogin = (username, password) => {\r\n        // Here you should implement your login logic\r\n        // If login is successful, set isLoggedIn to true\r\n        // setIsLoggedIn(true);\r\n        if(isLoggedIn) {\r\n            navigate(\"/home\");\r\n        } else {\r\n            alert(\"Please login first!\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"login-bg\">\r\n            <Input onLogin={handleLogin}/>\r\n        </div>\r\n    )\r\n}\r\nexport default login;\r\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,MAAM,0BAA0B;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACxC;IACA;IACA;IACA,IAAGJ,UAAU,EAAE;MACXD,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,MAAM;MACHM,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC;EAED,oBACIT,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBX,OAAA,CAACJ,KAAK;MAACgB,OAAO,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd,CAAC;AAAAd,EAAA,CArBKD,KAAK;EAAA,QAEUJ,WAAW;AAAA;AAoBhC,eAAeI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}